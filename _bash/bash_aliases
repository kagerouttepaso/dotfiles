# vim: filetype=sh
#define  alias
if [ -f ~/.my_proxy_setting ]; then
    source ~/.my_proxy_setting
fi
if [ -d ~/local/bin ]; then
    PATH=~/local/bin:$PATH
fi

# tmux config
if builtin command -v tmux >> /dev/null ; then
    alias tmux='if   [ -x /bin/zsh ];then           SHELL=/bin/zsh; 
                elif [ -x $HOME/local/bin/zsh ];then SHELL=$HOME/local/bin/zsh;
                fi && tmux -2'
    alias tmuxx='if $(tmux has-session 2> /dev/null); then
                      tmux attach -d; 
                 else tmux; fi'
    alias tmux_terateam='export TMUX_POWERLINE_NOT_USE_AMBIWIDTH=true && tmuxx'
fi

# ssh config
if builtin command -v ssh >> /dev/null ; then
    alias sshx="ssh -XCY"
    if [ -x /usr/bin/vim ] || [ -x /bin/vim ] ; then
        alias sshconfig="vim ~/.ssh/config"
    fi
fi

#tree config
if builtin command -v tree >> /dev/null ; then
    if builtin command -v perl >> /dev/null ; then
        alias treex="tree -NF | perl -pe 's/^├── //g; s/^└── //g; s/^│\xc2\xa0\xc2\xa0\x20//g; s/├── /\t/g; s/│\xc2\xa0\xc2\xa0\x20/\t/g; s/└── /\t/g; s/    /\t/g; s/\*$//g; s/^\.\n//g;'"
    fi
fi

# docker config
if builtin command -v docker.io >> /dev/null ; then
    alias docker="docker.io"
fi
if builtin command -v docker >> /dev/null ; then
    if builtin command -v sed >> /dev/null ; then
        alias docker_rm_exit_containers="docker ps -aqf 'status=exited' | xargs --no-run-if-empty docker rm -v && \
                                         docker ps -aqf 'status=created' | xargs --no-run-if-empty docker rm -v "
        alias docker_rm_noneimage="docker images -qf 'dangling=true' | xargs --no-run-if-empty docker rmi"
        alias docker_clean="docker_rm_exit_containers && docker_rm_noneimage"
    fi
fi

# git config
if builtin command -v git >> /dev/null ; then
    alias gitc="git checkout"
    alias gitb="git branch"
    alias gitr="git remote"
    alias gitrebase="git rebase"
    alias gitm="git merge"
    alias gitf="git fetch && git fetch -p"
fi
if builtin command -v vim >> /dev/null ; then
    alias zshrc="vim ~/.zshrc"
    alias vimrc="vim ~/.vimrc"
fi

#check arch and export ARCHz
if builtin command -v uname >> /dev/null && builtin command -v grep >> /dev/null ; then
    echo `uname -sr`
    if [ "`uname -sr | grep Linux`" ] ; then
        export ARCHz="linux"
        echo Linux
        if builtin command -v pandoc >> /dev/null ; then
            md2html(){
                if [ "$1" = "" ]; then
                    echo need markdown file path
                    exit
                fi
                full_path="$1"
                filename=${full_path##*/}
                filename_without_extension=${filename%.*}
                if [ ${full_path%/*} = ${full_path} ]; then
                    folder_path="."
                else
                    folder_path=${full_path%/*}
                fi
                extension=${folder_path##*.}

                #echo ファイル名
                #echo $filename
                #echo 拡張子抜き
                #echo $filename_without_extension
                #echo フォルダパス
                #echo $folder_path
                #echo 拡張子
                #echo $extension

                pandoc -t html ${full_path} -s -o ${folder_path}/${filename_without_extension}.html
                gnome-open ${folder_path}/${filename_without_extension}.html >& /dev/null
            }
        fi
    elif [ "`uname -sr | grep CYGWIN`" ] ; then
        export ARCHz="cygwin"
        echo Cygwin
        export DISPLAY=:0.0
        export PATH="$PATH:$HOME/.apt-cyg"
        if builtin command -v java >> /dev/null ; then
            alias javac="javac -J-Dfile.encoding=UTF-8"
            alias java="java -Dfile.encoding=UTF-8"
        fi
        if [ -d ~/.dotfiles/_apt-cyg ]; then
            PATH=~/.dotfiles/_apt-cyg:$PATH
        fi
    elif [ "`uname -sr | grep MINGW`" ] ; then
        export ARCHz="mingw"
        echo Mingw
    elif [ "`uname -sr | grep Darwin`"] ; then
        export ARCHz="mac"
        echo mac
        if [ "${SSH_CLIENT}" != "" ]; then
            LANG="`defaults read -g AppleLocale | sed 's/@.*$//g'`.UTF-8"
            export LANG
        fi
    else
        export ARCHz="dummy"
    fi
else
    export ARCHz="dummy"
fi

# define ebenv
if [ -d $HOME/.rbenv ]; then
    export PATH="$HOME/.rbenv/bin:$PATH"
    eval "$(rbenv init -)"
fi


