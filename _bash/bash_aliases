#define  alias
if [ -f ~/.my_proxy_setting ]; then
    source ~/.my_proxy_setting
fi
if [ -d ~/local/bin ]; then
    PATH=~/local/bin:$PATH
fi


if builtin command -v tmux >> /dev/null ; then
    alias tmux='if   [ -x /bin/zsh ];then           SHELL=/bin/zsh;
elif [ -x $HOME/local/bin/zsh];then SHELL=$HOME/local/bin/zsh;
fi && tmux -2'
alias tmuxx='if $(tmux has-session 2> /dev/null); then
tmux attach -d; else tmux; fi'
fi
if builtin command -v ssh >> /dev/null ; then
    alias sshx="ssh -XCY"
    if [ -x /usr/bin/vim ] || [ -x /bin/vim ] ; then
        alias sshconfig="vim ~/.ssh/config"
    fi
fi

if builtin command -v docker.io >> /dev/null ; then
    alias docker="docker.io"
fi
if builtin command -v docker >> /dev/null ; then
    if builtin command -v sed >> /dev/null ; then
        alias docker_rm_ago="      docker ps -a  | grep 'ago'       | sed -e 's/^\\([^ ]*\\).*$/\\1/'            | xargs -n1 -r docker rm"
        alias docker_rm_weeksago=" docker ps -a  | grep 'weeks ago' | sed -e 's/^\\([^ ]*\\).*$/\\1/'            | xargs -n1 -r docker rm"
        alias docker_rm_noneimage="docker images | grep '<none>'    | sed -e 's/^.*<none>* *\\([^ ]*\\) .*$/\\1/'| xargs -n1 -r docker rmi"
        alias docker_clean="docker_rm_ago && docker_rm_noneimage"
        docker_image_rm()
        {
            docker images | grep "$1"| grep -vE "(REPOSITORY|<none>)" | sed -e "s/^\([^ ]*\) *\([^ ]*\) .*/\1:\2/" | xargs docker rmi
        }
    fi
fi

if builtin command -v git >> /dev/null ; then
    alias gitc="git checkout"
    alias gitb="git branch"
    alias gitr="git remote"
    alias gitrebase="git rebase"
    alias gitm="git merge"
    alias gitf="git fetch && git fetch -p"
fi
if builtin command -v vim >> /dev/null ; then
    alias zshrc="vim ~/.zshrc"
    alias vimrc="vim ~/.vimrc"
fi

#check arch and export ARCHz
if builtin command -v uname >> /dev/null && builtin command -v grep >> /dev/null ; then
    echo `uname -sr`
    if [ "`uname -sr | grep Linux`"  ] ; then
        export ARCHz="linux"
        echo Linux
        md2html(){
            if [ "$1" = "" ]; then
                echo need markdown file path
                exit
            fi
            full_path="$1"
            filename=${full_path##*/}
            filename_without_extension=${filename%.*}
            if [ ${full_path%/*} = ${full_path} ]; then
                folder_path="."
            else
                folder_path=${full_path%/*}
            fi
            extension=${folder_path##*.}

            #echo ファイル名
            #echo $filename
            #echo 拡張子抜き
            #echo $filename_without_extension
            #echo フォルダパス
            #echo $folder_path
            #echo 拡張子
            #echo $extension

            pandoc -t html ${full_path} -s -o ${folder_path}/${filename_without_extension}.html
            gnome-open ${folder_path}/${filename_without_extension}.html >& /dev/null
        }
    elif [ "`uname -sr | grep CYGWIN`" ] ; then
        export ARCHz="cygwin"
        echo Cygwin
        export DISPLAY=:0.0
    elif [ "`uname -sr | grep MINGW`" ] ; then
        export ARCHz="mingw"
        echo Mingw
    else
        export ARCHz="dummy"
    fi
else
    export ARCHz="dummy"
fi

# define ebenv
if [ -d $HOME/.rbenv ]; then
    export PATH="$HOME/.rbenv/bin:$PATH"
    eval "$(rbenv init -)"
fi

# autojump configuration
# if you  use autojump, you must source autojump.* in ~/.autojump/bin/
PATH=$PATH:~/.autojump/bin
fpath=(~/.autojump/bin $fpath)
